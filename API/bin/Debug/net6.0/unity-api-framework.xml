<?xml version="1.0"?>
<doc>
    <assembly>
        <name>unity-api-framework</name>
    </assembly>
    <members>
        <member name="T:Senkel.Unity.API.ISceneManager">
            <summary>
            Represents an object that is capable of managing scenes by either loading or unloading them using an index or a string representing the scene name.
            </summary>
        </member>
        <member name="M:Senkel.Unity.API.ISceneManager.LoadScene(System.Int32,System.Boolean)">
            <summary>
            Loads the scene represented by the specified scene index either additively or as a new single scene.
            </summary>
            <param name="sceneIndex">The index that represents the scene.</param>
            <param name="additive">If the scene is loaded aside the other loaded scenes or if any other scene should be unloaded when loading this scene.</param>
        </member>
        <member name="M:Senkel.Unity.API.ISceneManager.LoadScene(System.String,System.Boolean)">
            <summary>
            Loads the scene represented by the specified scene name either additively or as a new single scene.
            </summary>
            <param name="sceneName">The name that represents the scene.</param>
            <param name="additive">If the scene is loaded aside the other loaded scenes or if any other scenes should be unloaded when loading this scene.</param>
        </member>
        <member name="M:Senkel.Unity.API.ISceneManager.LoadSceneAsync(System.Int32,System.Boolean)">
            <summary>
            Loads the scene represented by the specified scene index either additively or as a new single scene.
            </summary>
            <param name="sceneIndex">The index that represents the scene.</param>
            <param name="additive">If the scene is loaded aside the other loaded scenes or if any other scene should be unloaded when loading this scene.</param>
            <returns>Determines the operation of the scene loading.</returns>
        </member>
        <member name="M:Senkel.Unity.API.ISceneManager.LoadSceneAsync(System.String,System.Boolean)">
            <summary>
            Loads the scene represented by the specified scene name either additively or as a new single scene.
            </summary>
            <param name="sceneName">The name that represents the scene.</param>
            <param name="additive">If the scene is loaded aside the other loaded scenes or if any other scenes should be unloaded when loading this scene.</param>
            <returns>Represents the operation of the scene loading.</returns>
        </member>
        <member name="M:Senkel.Unity.API.ISceneManager.UnloadSceneAsync(System.Int32)">
            <summary>
            Unloads the scene represented by the specified index.
            </summary>
            <param name="sceneIndex">The index of the scene to unload.</param>
            <returns>Represents the operation of the scene unloading.</returns>
        </member>
        <member name="M:Senkel.Unity.API.ISceneManager.UnloadSceneAsync(System.String)">
            <summary>
            Unloads the scene represented by the specified name.
            </summary>
            <param name="sceneName">The name of the scene to unload.</param>
            <returns>Represents the operation of the scene unloading.</returns>
        </member>
        <member name="T:Senkel.Unity.API.IStopwatch">
            <summary>
            Represents a stopwatch that can be started, stopped and reset.
            </summary>
        </member>
        <member name="P:Senkel.Unity.API.IStopwatch.Elapsed">
            <summary>
            The total time measured by this stopwatch.
            </summary>
        </member>
        <member name="M:Senkel.Unity.API.IStopwatch.Start">
            <summary>
            Starts or resumes the measurement of the stopwatch.
            </summary>
        </member>
        <member name="M:Senkel.Unity.API.IStopwatch.Stop">
            <summary>
            Stops the measurement of the stopwatch, but should not reset the <see cref="P:Senkel.Unity.API.IStopwatch.Elapsed"/> value.
            </summary>
        </member>
        <member name="M:Senkel.Unity.API.IStopwatch.Reset">
            <summary>
            Stops the measurement of the stopwatch and resets the <see cref="P:Senkel.Unity.API.IStopwatch.Elapsed"/> value.
            </summary>
        </member>
        <member name="M:Senkel.Unity.API.IStopwatch.Restart">
            <summary>
            Resets the <see cref="P:Senkel.Unity.API.IStopwatch.Elapsed"/> value and restarts the stopwatch.
            </summary>
        </member>
    </members>
</doc>
